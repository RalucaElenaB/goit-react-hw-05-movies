{"version":3,"file":"static/js/832.22875f9a.chunk.js","mappings":"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","sources":["pages/Movies/components/MovieForm/MovieForm.jsx","pages/Movies/ApiMovies.js","pages/Movies/Movies.jsx"],"sourcesContent":["const MovieForm = ({ onSubmit, onChange, query }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"movie search\"\n        value={query}\n        onChange={onChange}\n      />\n      <button aria-label=\"search\" type=\"submit\">\n        <span className=\"search\">Search</span>\n      </button>{' '}\n      {/* Search button */}\n    </form>\n  );\n};\n\nexport default MovieForm;\n","import axios from 'axios';\n\nconst SEARCH_PATH = 'search/movie';\nconst language = 'en-US';\n\nconst KEY_API = 'f69b218f7039aed7eae0062e90da9fdc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getSearch = async query => {\n  try {\n    const { data } = await axios.get(\n      `${SEARCH_PATH}?api_key=${KEY_API}&query=${query}&language=${language}&include_adult=false`\n    );\n    const searchMovies = data.results;\n    return searchMovies;\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport { getSearch };\n","import MovieForm from 'pages/Movies/components/MovieForm/MovieForm';\nimport { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearch } from 'pages/Movies/ApiMovies';\nimport { useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams(); // Manages query parameter in URL\n  const location = useLocation();\n\n  useEffect(() => {\n    if (searchParams.get('query') !== null) {\n      const newQuery = searchParams.get('query');\n      const fetchSeachedMovies = async newQuery => {\n        const moviesResults = await getSearch(newQuery);\n        setMovies(moviesResults);\n      };\n      fetchSeachedMovies(newQuery);\n      resetForm();\n    }\n  }, [searchParams]);\n\n  const handleQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return;\n    }\n    setSearchParams({ query: query });\n  };\n\n  const resetForm = () => {\n    setQuery('');\n  };\n\n  return (\n    <div className=\"movie-page \">\n      <h1>Movie Search</h1>\n      <MovieForm\n        onSubmit={handleFormSubmit}\n        onChange={handleQueryChange}\n        query={query}\n      />\n      <ul className=\"home-movies-list\">\n        {movies.map((movie, id) => (\n          <li key={id} className=\"home-movies-item\">\n            <Link\n              to={`./${movie.id}`}\n              state={{ from: location.pathname + location.search }}\n            >\n              <div className=\"home-movies-title\">{movie.title}</div>\n            </Link>\n            <img\n              className=\"home-movies-img\"\n              src={'https://image.tmdb.org/t/p/w500' + movie.poster_path}\n              alt={movie.title}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n<Link to=\"/Home\">Back</Link>;\n\nexport default Movies;\n"],"names":["_ref","onSubmit","onChange","query","_jsxs","children","_jsx","type","placeholder","value","className","axios","getSearch","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","searchMovies","_context","prev","next","concat","sent","results","abrupt","t0","console","log","message","stop","_x","apply","arguments","Link","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","get","newQuery","fetchSeachedMovies","moviesResults","resetForm","MovieForm","e","preventDefault","trim","currentTarget","toLowerCase","map","movie","id","to","state","from","pathname","search","title","src","poster_path","alt"],"sourceRoot":""}