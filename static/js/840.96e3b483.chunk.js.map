{"version":3,"file":"static/js/840.96e3b483.chunk.js","mappings":"sPAMAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEVX,EAAAA,EAAAA,IAAU,SAADY,OAChBN,EAAO,KAAAM,OATJ,UASoB,aAAAA,OANtB,mCAMyC,cAAAA,OARxC,UASX,KAAD,EAC6B,OAHxBL,EAAGE,EAAAI,KAGHL,EAAeD,EAAIO,KAAIL,EAAAM,OAAA,SACtBP,GAAY,OAAAC,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEnBQ,QAAQC,IAAI,2BAA4BT,EAAAO,GAAMG,SAAS,yBAAAV,EAAAW,OAAA,GAAAf,EAAA,kBAE1D,gBAVegB,GAAA,OAAAnB,EAAAoB,MAAA,KAAAC,UAAA,K,SCiChB,EApCgB,WACd,IAAQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QACRmB,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAYlC,OAVAI,EAAAA,EAAAA,YAAU,WAER9B,EAAWK,GAAS0B,MAAK,SAAAlB,GAErBgB,EAAehB,EAAKmB,QAExB,GAEF,GAAG,KAGDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SACA,IAAvBP,EAAYQ,QACXH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SAAC,6DAI7BP,EAAYS,KAAI,SAACC,EAAQC,GAAG,OAC1BC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWC,SAAEG,EAAOG,UACjCR,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAEG,EAAOI,YAJ5BH,EAKJ,OAMjB,C","sources":["pages/MoviesDetails/components/Reviews/ApiMoviesReviews.js","pages/MoviesDetails/components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst REVIEWS_PATH = `reviews`;\nconst language = 'en-US';\n\nconst KEY_API = 'f69b218f7039aed7eae0062e90da9fdc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getReviews = async movieId => {\n  try {\n    const res = await axios.get(\n      `movie/${movieId}/${REVIEWS_PATH}?api_key=${KEY_API}&language=${language}`\n    );\n    const movieReviews = res.data;\n    return movieReviews;\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport { getReviews };\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getReviews } from 'pages/MoviesDetails/components/Reviews/ApiMoviesReviews';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsData, setReviewsData] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n    getReviews(movieId).then(data => {\n      if (mounted) {\n        setReviewsData(data.results);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"reviews\">\n      <ul className=\"reviews-ul\">\n        {reviewsData.length === 0 ? (\n          <li className=\"reviews-list\">\n            There are no reviews in the TMDB database for this film.\n          </li>\n        ) : (\n          reviewsData.map((review, idx) => (\n            <li key={idx}>\n              <h4>Author</h4>\n              <p className=\"reviews-p\">{review.author}</p>\n              <h4>Review</h4>\n              <h5 className=\"reviews-h5\">{review.content}</h5>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","getReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","res","movieReviews","_context","prev","next","concat","sent","data","abrupt","t0","console","log","message","stop","_x","apply","arguments","useParams","_useState","useState","_useState2","_slicedToArray","reviewsData","setReviewsData","useEffect","then","results","_jsx","className","children","length","map","review","idx","_jsxs","author","content"],"sourceRoot":""}