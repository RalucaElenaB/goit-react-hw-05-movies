{"version":3,"file":"static/js/840.94c749d1.chunk.js","mappings":"sPAMAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEVX,EAAAA,EAAAA,IAAU,SAADY,OAChBN,EAAO,KAAAM,OATJ,UASoB,aAAAA,OANtB,mCAMyC,cAAAA,OARxC,UASX,KAAD,EAC6B,OAHxBL,EAAGE,EAAAI,KAGHL,EAAeD,EAAIO,KAAIL,EAAAM,OAAA,SACtBP,GAAY,OAAAC,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEnBQ,QAAQC,IAAI,2BAA4BT,EAAAO,GAAMG,SAAS,yBAAAV,EAAAW,OAAA,GAAAf,EAAA,kBAE1D,gBAVegB,GAAA,OAAAnB,EAAAoB,MAAA,KAAAC,UAAA,K,SC6BhB,EAhCgB,WACd,IAAQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QACRmB,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAYlC,OAVAI,EAAAA,EAAAA,YAAU,WAER9B,EAAWK,GAAS0B,MAAK,SAAAlB,GAErBgB,EAAehB,EAAKmB,QAExB,GAEF,GAAG,KAGDC,EAAAA,EAAAA,KAAA,MAAAC,SAC0B,IAAvBN,EAAYO,QACXF,EAAAA,EAAAA,KAAA,MAAAC,SAAI,6DAEJN,EAAYQ,KAAI,SAACC,EAAQC,GAAG,OAC1BC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAIG,EAAOG,UACXP,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,EAAOI,YAJLH,EAKJ,KAKf,C","sources":["pages/MoviesDetails/components/Reviews/ApiMoviesReviews.js","pages/MoviesDetails/components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst REVIEWS_PATH = `reviews`;\nconst language = 'en-US';\n\nconst KEY_API = 'f69b218f7039aed7eae0062e90da9fdc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getReviews = async movieId => {\n  try {\n    const res = await axios.get(\n      `movie/${movieId}/${REVIEWS_PATH}?api_key=${KEY_API}&language=${language}`\n    );\n    const movieReviews = res.data;\n    return movieReviews;\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport { getReviews };\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getReviews } from 'pages/MoviesDetails/components/Reviews/ApiMoviesReviews';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsData, setReviewsData] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n    getReviews(movieId).then(data => {\n      if (mounted) {\n        setReviewsData(data.results);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul>\n      {reviewsData.length === 0 ? (\n        <li>There are no reviews in the TMDB database for this film.</li>\n      ) : (\n        reviewsData.map((review, idx) => (\n          <li key={idx}>\n            <h4>Author</h4>\n            <p>{review.author}</p>\n            <h4>Review</h4>\n            <h5>{review.content}</h5>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","getReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","res","movieReviews","_context","prev","next","concat","sent","data","abrupt","t0","console","log","message","stop","_x","apply","arguments","useParams","_useState","useState","_useState2","_slicedToArray","reviewsData","setReviewsData","useEffect","then","results","_jsx","children","length","map","review","idx","_jsxs","author","content"],"sourceRoot":""}