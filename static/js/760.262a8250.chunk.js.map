{"version":3,"file":"static/js/760.262a8250.chunk.js","mappings":"sPAEMA,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIyB,MAHvC,UACD,QACD,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAAgCH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAErCC,EAAAA,EAAAA,IAAU,SAADC,OAChBP,EAAO,KAAAO,OANF,UAMkB,aAAAA,OAJpB,mCAIuC,cAAAA,OALtC,UAMb,KAAD,EAC6B,OAHxBN,EAAGE,EAAAK,KAGHN,EAAeD,EAAIQ,KAAIN,EAAAO,OAAA,SACtBR,GAAY,QAAAC,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEnBS,QAAQC,IAAI,2BAA4BV,EAAAQ,GAAMG,SAAS,yBAAAX,EAAAY,OAAA,GAAAhB,EAAA,mBAE1D,gBAdiBiB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,K,SC8ClB,EA5Ca,WACX,IAAQlB,GAAYmB,EAAAA,EAAAA,MAAZnB,QACRoB,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAc5B,OAXAI,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAU,EAMd,OALAhC,EAAaK,GAAS4B,MAAK,SAAAnB,GACrBkB,GACFF,EAAYhB,EAAKoB,KAErB,IACO,kBAAOF,GAAU,CAAK,CAE/B,GAAG,KAGDG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SACuB,IAApBR,EAASS,QACRH,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qEAIHR,EAASU,KAAI,SAACL,EAAMM,GAAG,OACrBC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACEO,IACER,EAAKS,aAzBH,kCA0BcT,EAAKS,aACjB,4FAENC,IAAKV,EAAKW,KAAOX,EAAKY,cAAgB,uBAExCX,EAAAA,EAAAA,KAAA,MAAAE,SAAKH,EAAKW,QACVV,EAAAA,EAAAA,KAAA,KAAAE,SAAIH,EAAKa,cAVFP,EAWJ,OAMjB,C","sources":["pages/MoviesDetails/components/Cast/ApiMoviesCast.js","pages/MoviesDetails/components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst getMovieCast = async movieId => {\n  const CREDITS_PATH = `credits`;\n  const language = 'en-US';\n  const KEY_API = 'f69b218f7039aed7eae0062e90da9fdc';\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  try {\n    const res = await axios.get(\n      `movie/${movieId}/${CREDITS_PATH}?api_key=${KEY_API}&language=${language}`\n    );\n    const movieCredits = res.data;\n    return movieCredits;\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport { getMovieCast };\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCast } from 'pages/MoviesDetails/components/Cast/ApiMoviesCast';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castData, setCastData] = useState([]);\n  const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    let mounted = true;\n    getMovieCast(movieId).then(data => {\n      if (mounted) {\n        setCastData(data.cast);\n      }\n    });\n    return () => (mounted = false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"cast-section\">\n      <ul>\n        {castData.length === 0 ? (\n          <p>\n            There is no data in the TMDB database for the cast of this film.\n          </p>\n        ) : (\n          castData.map((cast, idx) => (\n            <li key={idx}>\n              <img\n                src={\n                  cast.profile_path\n                    ? IMAGE_URL + cast.profile_path\n                    : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n                }\n                alt={cast.name ? cast.original_name : 'Actor coming soon'}\n              />\n              <h3>{cast.name}</h3>\n              <p>{cast.character}</p>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["getMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","res","movieCredits","_context","prev","next","axios","concat","sent","data","abrupt","t0","console","log","message","stop","_x","apply","arguments","useParams","_useState","useState","_useState2","_slicedToArray","castData","setCastData","useEffect","mounted","then","cast","_jsx","className","children","length","map","idx","_jsxs","src","profile_path","alt","name","original_name","character"],"sourceRoot":""}